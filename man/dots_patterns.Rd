% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dots.R
\name{dots_patterns}
\alias{dots_patterns}
\alias{dots_definitions}
\title{Quote patterns, definitions or formulas}
\usage{
dots_patterns(..., .named = FALSE, .ignore_empty = c("trailing", "none",
  "all"), .operator = "~")

dots_definitions(..., .named = FALSE, .ignore_empty = c("trailing", "none",
  "all"))
}
\arguments{
\item{...}{Expressions to capture unevaluated.}

\item{.named}{Whether to ensure all dots are named. Unnamed
elements are processed with \code{\link[=expr_text]{expr_text()}} to figure out a default
name. If an integer, it is passed to the \code{width} argument of
\code{expr_text()}, if \code{TRUE}, the default width is used. See
\code{\link[=exprs_auto_name]{exprs_auto_name()}}.}

\item{.ignore_empty}{Whether to ignore empty arguments. Can be one
of \code{"trailing"}, \code{"none"}, \code{"all"}. If \code{"trailing"}, only the
last argument is ignored if it is empty.}

\item{.operator}{The name of a binary operator from which to
extract an LHS and a RHS.}
}
\value{
A named list of lists of extracted LHS and RHS
components. The inner lists contain two quosures named \code{lhs} and
\code{rhs}. The outer list is named after the dots inputs.
}
\description{
These quoting functions take dots and expect two-sided patterns
such as \code{a ~ b} or \code{a := b}. The LHS and RHS of each input are
extracted in a list containing two quosures.
\itemize{
\item \code{dots_patterns()} expects two-sided formulas by default. If
\code{.operator} is set to \code{":="}, it expects definitions.
\item \code{dots_definitions()} extracts \code{:=} definitions in a sublist named
\code{defs}. All other types of inputs are captured in quosures within
\code{dots}.
}
}
\section{Life cycle}{


These functions are \link[=lifecycle]{experimental}.
}

\examples{
dots_patterns(
  A = a ~ b,
  c ~ d
)

# You can specify the binary operator:
dots_patterns(a := b, .operator = ":=")
dots_patterns(a / b, .operator = "/")
}
\seealso{
\code{\link[=quos]{quos()}}
}
